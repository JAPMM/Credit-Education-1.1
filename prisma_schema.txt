// prisma/schema.prisma
// Defines database structure for users, quizzes, results, and analytics

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  password      String?  // null if Google
  name          String?
  googleId      String?  @unique
  role          Role     @default(USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  results       Result[]
  analytics     AnalyticsEvent[]
}

enum Role {
  USER
  ADMIN
}

model Quiz {
  id            String   @id @default(uuid())
  title         String
  description   String
  language      String   // e.g. "en", "es", "mon", "fr"
  questions     Question[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Question {
  id          String   @id @default(uuid())
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  quizId      String
  type        String   // "mcq", "tf"
  difficulty  String   // "basic", "intermediate", "advanced"
  topic       String
  text        String
  options     String[] // for MCQ; T/F for true/false
  answer      String
  explanation String?
  resource    String?
}

model Result {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  quizId      String
  score       Int
  total       Int
  percentage  Float
  completedAt DateTime @default(now())
  answers     Answer[]
}

model Answer {
  id          String   @id @default(uuid())
  result      Result   @relation(fields: [resultId], references: [id])
  resultId    String
  questionId  String
  userAnswer  String
  isCorrect   Boolean
}

model AnalyticsEvent {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  type      String   // e.g. "login", "quiz_start", "quiz_submit"
  meta      Json?
  createdAt DateTime @default(now())
}
